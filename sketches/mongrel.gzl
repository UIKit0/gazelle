
// line endings
CRLF: "\r\n";

// character types
CTL:        cntrl | [ \x7f ];
safe:       [ $ _ . - ];
extra:      [ ! * ' ( ) , ];
reserved:   [ ; / ? : @ & = + ];
sorta_safe: [ " < > ];
unsafe:     [ #{CTL} \s # % #{sorta_safe} ];
national:   [^#{alpha} #{digit} #{reserved} #{extra} #{safe} #{unsafe} ];
unreserved: [ #{alpha} #{digit} #{safe} #{extra} #{national} ];

escape:     / % [0-9A-Fa-f]{2} /;
uchar:      / #{unreserved} | #{escape} /;
pchar:      / #{uchar}      | [ : @ & = + ] /;
tspecials:  [ ( ) < > @ , ; : \\ " / [ \] ? = { } \s \t ];

// elements
token:      [^ #{CTL} #{tspecials} ];

// URI schemes and absolute paths
scheme:       / [ #{alpha} #{digit} + - . ]* /;
absolute_uri: / (#{scheme}) ":" ([#{uchar} | #{reserved}]*) /;

path   -> pchar+ ( "/" /#{pchar}*/ )*;
query:    /[ #{uchar} | #{reserved} ]*/;
param:    /[ #{pchar}  / ]*/;
params -> param (";" param )*;
rel_path -> path? (";" params)? ("?" query)?;
absolute_path -> "/"+ rel_path;

Request_URI -> "*" | absolute_uri | absolute_path;
Fragment: / [#{uchar} #{reserved}]* /;
Method:   / [#{upper} #{digit} #{safe}]{1,20} /;

http_number: / #{digit}+ \. #{digit}+/;
HTTP_Version -> "HTTP/" http_number;
Request_Line -> Method " " Request_URI ("#" Fragment)? " " HTTP_Version CRLF;

field_name: / (#{token} -- ":")+ /;

message_header -> field_name ":" " "* /[^\r]*/ CRLF;

Request -> Request_Line message_header* CRLF;
